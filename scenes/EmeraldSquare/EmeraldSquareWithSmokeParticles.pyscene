# Load scene
sceneBuilder.importScene("EmeraldSquare_Day.fbx")

for c in sceneBuilder.cameras:
	c.nearPlane = 0.1
	c.farPlane = 800.0

sun = sceneBuilder.getLight("Day")
sun.intensity = float3(1.0,0.7803,0.6667) * 15

#Remove animated lights
sceneBuilder.removeLight("pointLight1")
sceneBuilder.removeLight("Day")
#create new directional light
sun = DirectionalLight("Sun")
sun.intensity = float3(1.0, 0.7921 ,0.5137) * 20.0
sun.direction = float3(0.588,-0.683,-0.434)		#For Comparison

sceneBuilder.addLight(sun)

#Add a test camera for time measurements
testCam = Camera("ComparisonCamera")
testCam.position = float3(-11.873255, 2.977333, 8.943862)
testCam.target = float3(-11.724768, 2.857806, 9.925527)
testCam.up = float3(0.000000, 1.000000, 0.000000)
testCam.focalLength = 35.0
testCam.nearPlane = 0.1
testCam.farPlane =  300.0
sceneBuilder.addCamera(testCam)

#Blacklist
useBlacklist = True
if(useBlacklist):
	for m in sceneBuilder.materials:
		m.castShadow = False

floor = sceneBuilder.getMaterial("Floor")
floor.doubleSided = True

#Fix broken material
replaceBrokenWorldGridMat = StandardMaterial('NonVisible')
replaceBrokenWorldGridMat.baseColor = float4(0.0, 0.0, 0.0, 0.0)
worldGrid = sceneBuilder.getMaterial("WorldGridMaterial")
sceneBuilder.replaceMaterial(worldGrid, replaceBrokenWorldGridMat)

#Fix DoubleSided Materials
tree = sceneBuilder.getMaterial("JapaneseMapleLeaf_1.DoubleSided4")
tree.doubleSided = True
tree = sceneBuilder.getMaterial("JapaneseMapleLeaf_2.DoubleSided4")
tree.doubleSided = True

leaves = sceneBuilder.getMaterial("Pink_Flower.DoubleSided1")
leaves.doubleSided = True
leaves = sceneBuilder.getMaterial("Azalea_Leaves_2.DoubleSided1")
leaves.doubleSided = True
leaves = sceneBuilder.getMaterial("Azalea_Leaves_1.DoubleSided1")
leaves.doubleSided = True

banner = sceneBuilder.getMaterial("PoleBanner_1")
banner.doubleSided = True

# Set environment map
sceneBuilder.envMap = EnvMap("symmetrical_garden_4k.hdr")

#Add Particle Systems
smoke_transparent = StandardMaterial('Smoke1')
smoke_transparent.baseColor = float4(1.0, 1.0, 1.0, 0.9)
smoke_transparent.roughness = 1.0
smoke_transparent.metallic = 0
smoke_transparent.doubleSided = True
smoke_transparent.thinSurface = True
smoke_transparent.loadTexture(MaterialTextureSlot.BaseColor, 'ParticleTextures/smoke3_15.png')
sceneBuilder.addParticleSystem("SmokeDump", smoke_transparent, 2048, float3(10,-2,0))

smoke_transparent = StandardMaterial('Smoke1_2')
smoke_transparent.baseColor = float4(1.0, 1.0, 1.0, 0.9)
smoke_transparent.roughness = 1.0
smoke_transparent.metallic = 0
smoke_transparent.doubleSided = True
smoke_transparent.thinSurface = True
smoke_transparent.loadTexture(MaterialTextureSlot.BaseColor, 'ParticleTextures/smoke3_20.png')
sceneBuilder.addParticleSystem("SmokeMiddle", smoke_transparent, 2048, float3(10,-2,0))

sceneBuilder.addParticleSystem("SmokeBehindCam1", smoke_transparent, 2048, float3(10,-2,0))
sceneBuilder.addParticleSystem("SmokeBehindCam2", smoke_transparent, 2048, float3(10,-2,0))

smoke_transparent = StandardMaterial('Smoke1_3')
smoke_transparent.baseColor = float4(1.0, 1.0, 1.0, 0.9)
smoke_transparent.roughness = 1.0
smoke_transparent.metallic = 0
smoke_transparent.doubleSided = True
smoke_transparent.thinSurface = True
smoke_transparent.loadTexture(MaterialTextureSlot.BaseColor, 'ParticleTextures/smoke3_14.png')
sceneBuilder.addParticleSystem("SmokeFar", smoke_transparent, 6144, float3(10,-2,0))

